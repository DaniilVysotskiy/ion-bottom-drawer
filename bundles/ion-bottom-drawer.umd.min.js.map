{"version":3,"sources":["ng://ion-bottom-drawer/modules/ion-bottom-drawer/ion-bottom-drawer.ts","ng://ion-bottom-drawer/modules/ion-bottom-drawer/ion-bottom-drawer.module.ts"],"names":["IonBottomDrawerComponent","_element","_renderer","_domCtrl","_platform","this","DrawerState","Bottom","EventEmitter","prototype","ngAfterViewInit","_this","setStyle","nativeElement","querySelector","_setDrawerState","state","hammer","Hammer","get","set","enable","direction","DIRECTION_VERTICAL","on","ev","type","_handlePanStart","_handlePanEnd","_handlePan","ngOnChanges","changes","currentValue","transition","_setTranslateY","minimumHeight","Docked","height","dockedHeight","distanceTop","_startPositionTop","getBoundingClientRect","top","shouldBounce","isFinal","_handleDockedPanEnd","Top","_handleTopPanEnd","_handleBottomPanEnd","stateChange","emit","deltaY","_BOUNCE_DELTA","absDeltaY","Math","abs","pointerY","center","y","additionalEvent","newTop","value","write","Component","args","selector","template","styles","ElementRef","Renderer2","DomController","Platform","Input","Output","IonBottomDrawerModule","NgModule","declarations","imports","IonicModule","exports"],"mappings":"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","sourcesContent":["import { Component, Input, ElementRef, Renderer2, Output, EventEmitter, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Platform, DomController } from 'ionic-angular';\n\nimport { DrawerState } from './drawer-state';\n\n@Component({\n  selector: 'ion-bottom-drawer',\n  template: `<ion-content class=\"ion-bottom-drawer-scrollable-content\" no-bounce>\n  <ng-content></ng-content>\n</ion-content>\n`,\n  styles: [`:host{width:100%;height:100%;position:absolute;left:0;z-index:11!important;background-color:#fff;-webkit-transform:translateY(100vh);transform:translateY(100vh)}`]\n})\nexport class IonBottomDrawerComponent implements AfterViewInit, OnChanges {\n  @Input() dockedHeight: number = 50;\n\n  @Input() shouldBounce: boolean = true;\n\n  @Input() distanceTop: number = 0;\n\n  @Input() transition: string = '0.25s ease-in-out';\n\n  @Input() state: DrawerState = DrawerState.Bottom;\n\n  @Input() minimumHeight: number = 0;\n\n  @Output() stateChange: EventEmitter<DrawerState> = new EventEmitter<DrawerState>();\n\n  private _startPositionTop: number;\n  private readonly _BOUNCE_DELTA = 30;\n\n  constructor(\n    private _element: ElementRef,\n    private _renderer: Renderer2,\n    private _domCtrl: DomController,\n    private _platform: Platform\n  ) { }\n\n  ngAfterViewInit() {\n    this._renderer.setStyle(this._element.nativeElement.querySelector('.ion-bottom-drawer-scrollable-content .scroll-content'), 'touch-action', 'none');\n    this._setDrawerState(this.state);\n\n    const hammer = new Hammer(this._element.nativeElement.querySelector('.drawer-toolbar'));\n    hammer.get('pan').set({ enable: true, direction: Hammer.DIRECTION_VERTICAL });\n    hammer.on('pan panstart panend', (ev: any) => {\n      switch (ev.type) {\n        case 'panstart':\n          this._handlePanStart();\n          break;\n        case 'panend':\n          this._handlePanEnd(ev);\n          break;\n        default:\n          this._handlePan(ev);\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!changes.state) return;\n    this._setDrawerState(changes.state.currentValue);\n  }\n\n  private _setDrawerState(state: DrawerState) {\n    this._renderer.setStyle(this._element.nativeElement, 'transition', this.transition);\n    switch (state) {\n      case DrawerState.Bottom:\n        this._setTranslateY('calc(100vh - ' + this.minimumHeight + 'px)');\n        break;\n      case DrawerState.Docked:\n        this._setTranslateY((this._platform.height() - this.dockedHeight) + 'px');\n        break;\n      default:\n        this._setTranslateY(this.distanceTop + 'px');\n    }\n  }\n\n  private _handlePanStart() {\n    this._startPositionTop = this._element.nativeElement.getBoundingClientRect().top;\n  }\n\n  private _handlePanEnd(ev) {\n    if (this.shouldBounce && ev.isFinal) {\n      this._renderer.setStyle(this._element.nativeElement, 'transition', this.transition);\n\n      switch (this.state) {\n        case DrawerState.Docked:\n          this._handleDockedPanEnd(ev);\n          break;\n        case DrawerState.Top:\n          this._handleTopPanEnd(ev);\n          break;\n        default:\n          this._handleBottomPanEnd(ev);\n      }\n    }\n    this.stateChange.emit(this.state);\n  }\n\n  private _handleTopPanEnd(ev) {\n    if (ev.deltaY > this._BOUNCE_DELTA) {\n      this.state = DrawerState.Docked;\n    } else {\n      this._setTranslateY(this.distanceTop + 'px');\n    }\n  }\n\n  private _handleDockedPanEnd(ev) {\n    const absDeltaY = Math.abs(ev.deltaY)\n    if (absDeltaY > this._BOUNCE_DELTA && ev.deltaY < 0) {\n      this.state = DrawerState.Top;\n    } else if (absDeltaY > this._BOUNCE_DELTA && ev.deltaY > 0) {\n      this.state = DrawerState.Bottom\n    } else {\n      this._setTranslateY((this._platform.height() - this.dockedHeight) + 'px');\n    }\n  }\n\n  private _handleBottomPanEnd(ev) {\n    if (-ev.deltaY > this._BOUNCE_DELTA) {\n      this.state = DrawerState.Docked;\n    } else {\n      this._setTranslateY('calc(100vh - ' + this.minimumHeight + 'px)');\n    }\n  }\n\n  private _handlePan(ev) {\n    const pointerY = ev.center.y;\n    this._renderer.setStyle(this._element.nativeElement, 'transition', 'none');\n    if (pointerY > 0 && pointerY < this._platform.height()) {\n      if (ev.additionalEvent === 'panup' || ev.additionalEvent === 'pandown') {\n        const newTop = this._startPositionTop + ev.deltaY;\n        if (newTop >= this.distanceTop) this._setTranslateY(newTop + 'px');\n        else if (newTop < this.distanceTop) this._setTranslateY(this.distanceTop + 'px');\n        if (newTop > this._platform.height() - this.minimumHeight) this._setTranslateY((this._platform.height() - this.minimumHeight) + 'px');\n      }\n    }\n  }\n\n  private _setTranslateY(value) {\n    this._domCtrl.write(() => {\n      this._renderer.setStyle(this._element.nativeElement, 'transform', 'translateY(' + value + ')');\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { IonicModule } from 'ionic-angular';\nimport { IonBottomDrawerComponent } from './ion-bottom-drawer';\n\n@NgModule({\n  declarations: [IonBottomDrawerComponent],\n  imports: [IonicModule],\n  exports: [IonBottomDrawerComponent]\n})\nexport class IonBottomDrawerModule { }\n"]}